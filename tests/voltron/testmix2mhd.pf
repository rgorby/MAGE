module testmix2mhd
  use pfUnit
  use voltapp
  use gamapp
  use mix2mhd_interface

  implicit none

contains

  @before
  subroutine firstSerial()
  end subroutine firstSerial

  @after
  subroutine lastSerial()
  end subroutine lastSerial

  @test
  subroutine corotationTest()
    ! testing that a corotation potential from remix results in a corotation field in gamera
    type(voltApp_T) :: voltronApp
    type(gamApp_T) :: gameraApp

    character(len=strLen) :: caseInput = 'cmiD.xml'
    real(rp), dimension(NDIM) :: rHatP,eHat,xyz
    real(rp) :: deltaSum,lambda,rval,xc,yc,zc
    integer :: h,ip,it,k,j,jp,kp,n,np,i,ig

    call initGamera(gameraApp, caseInput)

    call initVoltron(voltronApp, gameraApp, caseInput)

    ! zero out the remix output so that only the added corotation field is sent to gamera
    voltronApp%remixApp%mixOutput = 0.0_rp

    do k=gameraApp%Grid%ks,gameraApp%Grid%ke+1
        do j=gameraApp%Grid%js,gameraApp%Grid%je+1
            do i=1,voltronApp%remixApp%PsiShells+1
                !i = Grid%is+PsiSt-1
                iG = i+voltronApp%remixApp%PsiStart-1 !Global i index for Grid access

                xyz = gameraApp%Grid%xyz(iG,j,k,:)
                rval = norm2(xyz)
                lambda = acos(xyz(ZDIR)/rval)

                voltronApp%remixApp%gPsi(i,j,k) = cos(lambda)*cos(lambda)/rval

            enddo
        enddo
    enddo

    call convertRemixToGamera(gameraApp, voltronApp%remixApp)

    ! find the remix BC to verify the resulting Gamera data
    SELECT type(iiBC=>gameraApp%Grid%externalBCs(INI)%p)
        TYPE IS (IonInnerBC_T)
            ! verify that the gamera field (iiBC%inEijk, iiBC%inExyz, or both) have the expected values here
            ! inExyz should be pointed exactly radially at all locations
            deltaSum = 0.0_rp
            do k=gameraApp%Grid%ksg,gameraApp%Grid%keg
                do j=gameraApp%Grid%jsg,gameraApp%Grid%jeg

                    !Map to active ip,jp,kp (i=Grid%is => ip=Grid%is)
                    call lfmIJK(gameraApp%Model,gameraApp%Grid,gameraApp%Grid%is,j,k,ip,jp,kp)

                    do n=1,gameraApp%Model%Ng
                        ig = gameraApp%Grid%is-n
                        np = gameraApp%Model%nG-n+1

                        call cellCenter(gameraApp%Grid, ig,j,k,xc,yc,zc)
                        rHatP = normVec([xc,yc,zc])

                        eHat = normVec(iiBC%inExyz(np,jp,kp,:))

                        deltaSum = deltaSum + abs(norm2(rHatP-eHat))
                    end do
                end do
            end do

            ! 16128 cells counted, reasonable error of 1e-3 per cell = 16.128
            @assertLessThanOrEqual(deltaSum, 1e-8_rp, 'Magnetic field from remix was not pointing radially')

        CLASS DEFAULT
            @assertTrue(.false., 'Could not find Ion Inner BC in remix IC')
    END SELECT

  end subroutine corotationTest

end module testmix2mhd

